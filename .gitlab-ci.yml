#Test Pipeline 12

# This is to test merge request!!!

stages:
  - build
  - test  
  - deploy staging
  - staging tests
  - deploy production


cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/  


variables:
  STAGING_DOMAIN: staging.trojanwall.surge.sh # URL to Staging environment1.
  STAGING_DOMAIN2: staging2.trojanwall.surge.sh # URL to Staging environment2.


build website:
  image: node
  stage: build  
  script:
    - npm install
    - npm i python3

    - mkdir .public
    - cp -r * .public
    - mv .public public

  artifacts:
    paths:
      - public
      
test artifact:
  image: node 
  stage: test
  script:
    - grep -q "All Rights Reserved" ./public/index.html
   
test website:
  image: node
  stage: test
  script: 
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 3
  ##  - curl "http://localhost:9000" | tac | tac | grep -q "Trojanwall"      
  

deploy staging:
  image: node
  stage: deploy staging 
  environment:
    name: staging
    url: $STAGING_DOMAIN2
  script:
    - npm install --global surge
    - npm i python3
    - surge --project ./public --domain $STAGING_DOMAIN2

    
staging tests:
  image: alpine
  stage: staging tests    
  script:
    - apk add --no-cache curl
    - curl -s "http://staging2.trojanwall.surge.sh" | grep -q "Â© 2020-2030 TrojanWall Version 2.0 All Rights Reserved"    

deploy production:
  image: node
  stage: deploy production
  only:
    - Production 
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$PROD_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600  ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  script:
    - bash ec2-deploy.sh
#    - bash .gitlab-deploy.prod.sh
    - echo "Deployment Completed"

  environment:
     name: production
  
